<session jtag_chain="USB-Blaster [1-1]" jtag_device="@1: EP3C25/EP4CE22 (0x020F30DD)" sof_file="C3BoardToplevel.sof">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" log="USE_GLOBAL_TEMP" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <signal_set global_temp="1" is_expanded="true" name="signal_set: 2013/05/06 20:06:27  #0">
      <clock name="ZPUTest:mytg68test|clk" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="512" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="ZPUTest:mytg68test|spi_clk" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_cs" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|busy" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_miso" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_mosi" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_tick[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[10]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[11]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[9]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_trigger" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_wide" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spiclk_in" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_readEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableb" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableh" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[9]" tap_mode="classic" type="combinatorial"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="ZPUTest:mytg68test|spi_clk" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_cs" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|busy" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_miso" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_mosi" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_tick[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[10]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[11]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[9]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_trigger" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_wide" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spiclk_in" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_readEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableb" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableh" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[9]" tap_mode="classic" type="combinatorial"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="ZPUTest:mytg68test|spi_clk" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_cs" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|busy" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_miso" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_mosi" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|spi_tick[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[10]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[11]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_tick[9]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_trigger" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spi_wide" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|spiclk_in" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[8]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[0]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[1]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[2]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[3]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[4]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[5]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[6]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|opcode[7]" tap_mode="classic" type="register"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_readEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnable" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableb" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableh" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[16]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[17]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[18]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[19]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[20]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[21]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[22]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[23]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[24]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[25]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[26]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[27]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[28]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[29]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[30]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[31]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[9]" tap_mode="classic" type="combinatorial"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|opcode" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnable"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_readEnable"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableb"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableh"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[2]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[2]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_clk"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_cs"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_miso"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_mosi"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_tick" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_trigger"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_wide"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spiclk_in"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|busy"/>
        </data_view>
        <setup_view>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_read[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|mem_write[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|opcode" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|opcode[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnable"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_readEnable"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableb"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|out_mem_writeEnableh"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memARead[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[31]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[30]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[29]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[28]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[27]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[26]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[25]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[24]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[23]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[22]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[21]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[20]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[19]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[18]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[17]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[16]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|stackram:memory|memBRead[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memAAddr[2]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|zpu_core:zpu|memBAddr[2]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_clk"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_cs"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_miso"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_mosi"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_tick" order="msb_to_lsb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_tick[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_trigger"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_wide"/>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spiclk_in"/>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|host_to_spi[0]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host" order="msb_to_lsb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[15]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[14]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[13]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[12]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[11]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[10]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[9]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[8]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[7]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[6]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[5]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[4]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[3]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[2]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[1]"/>
            <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|spi_to_host[0]"/>
          </bus>
          <net is_signal_inverted="no" name="ZPUTest:mytg68test|spi_interface:spi|busy"/>
        </setup_view>
      </presentation>
      <trigger CRC="9B67CD3D" attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2013/05/07 00:44:41  #0" position="post" power_up_trigger_mode="false" record_data_gap="true" segment_size="128" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="false" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="segmented">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[0]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[10]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[11]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[12]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[13]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[14]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[15]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[16]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[17]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[18]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[19]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[1]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[20]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[21]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[22]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[23]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[24]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[25]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[26]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[27]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[28]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[29]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[2]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[30]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[31]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[3]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[4]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[5]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[6]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[7]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[8]' == high &amp;&amp; 'ZPUTest:mytg68test|zpu_core:zpu|out_mem_addr[9]' == high
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            <pwr_up_transitional>0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
        <log>
          <data global_temp="1" name="log: 2013/05/07 00:59:32  #0" power_up_mode="false" sample_depth="128" segment_size="128"></data>
          <extradata>11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110</extradata>
        </log>
      </trigger>
    </signal_set>
    <position_info>
      <single attribute="active tab" value="0"/>
      <single attribute="data horizontal scroll position" value="2"/>
      <single attribute="data vertical scroll position" value="0"/>
      <single attribute="zoom level denominator" value="1"/>
      <single attribute="zoom level numerator" value="16"/>
      <single attribute="zoom offset denominator" value="1"/>
      <single attribute="zoom offset numerator" value="8184"/>
    </position_info>
  </instance>
  <static_plugin_mnemonics/>
  <mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="config widget visible" value="1"/>
    <single attribute="data log widget visible" value="0"/>
    <single attribute="hierarchy widget visible" value="0"/>
    <single attribute="instance widget visible" value="1"/>
    <single attribute="jtag widget visible" value="1"/>
    <multi attribute="frame size" size="2" value="1155,785"/>
    <multi attribute="jtag widget size" size="2" value="384,133"/>
  </global_info>
</session>
